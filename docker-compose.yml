version: '3.8'

services:
  # Database Service (MySQL)
  db:
    image: mysql:8.0
    container_name: mysql_db
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} # Should be a strong password in production
    restart: always

  # Cache & Message Broker (Redis)
  redis:
    image: redis:7.0-alpine
    container_name: redis_cache
    restart: always

  # Django Application Service (Gunicorn)
  app:
    build: .
    container_name: django_app
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - 8000
    depends_on:
      - db
      - redis
    env_file:
      - .env.prod
    command: /app/entrypoint.sh

  # Celery Worker Service
  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A kabhishek18 worker -l info
    depends_on:
      - redis
      - app
    env_file:
      - .env.prod
    restart: always

  # Celery Beat Scheduler Service
  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A kabhishek18 beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - redis
      - app
    env_file:
      - .env.prod
    restart: always

  # Web Server / Reverse Proxy (Nginx)
  nginx:
    image: nginx:1.21-alpine
    container_name: nginx_server
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - app
    restart: always

volumes:
  mysql_data:
  static_volume:
  media_volume:

