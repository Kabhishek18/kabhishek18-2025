# Generated by Django 5.2.3 on 2025-08-08 05:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0008_rename_blog_mediai_post_id_b8e7a5_idx_blog_mediai_post_id_61caea_idx_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='LinkedInConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.CharField(help_text='LinkedIn API Client ID', max_length=100)),
                ('client_secret', models.TextField(help_text='LinkedIn API Client Secret (encrypted)')),
                ('access_token', models.TextField(blank=True, help_text='LinkedIn API Access Token (encrypted)')),
                ('refresh_token', models.TextField(blank=True, help_text='LinkedIn API Refresh Token (encrypted)')),
                ('token_expires_at', models.DateTimeField(blank=True, help_text='When the access token expires', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this LinkedIn integration is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'LinkedIn Configuration',
                'verbose_name_plural': 'LinkedIn Configurations',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['is_active'], name='blog_linked_is_acti_278c8e_idx')],
            },
        ),
        migrations.CreateModel(
            name='LinkedInPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linkedin_post_id', models.CharField(blank=True, help_text='LinkedIn post ID returned by the API', max_length=100)),
                ('linkedin_post_url', models.URLField(blank=True, help_text='Direct URL to the LinkedIn post')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='pending', help_text='Current status of the LinkedIn posting', max_length=10)),
                ('error_message', models.TextField(blank=True, help_text='Error message if posting failed')),
                ('error_code', models.CharField(blank=True, help_text='LinkedIn API error code if available', max_length=50)),
                ('attempt_count', models.PositiveIntegerField(default=0, help_text='Number of posting attempts made')),
                ('max_attempts', models.PositiveIntegerField(default=3, help_text='Maximum number of retry attempts')),
                ('posted_title', models.CharField(blank=True, help_text='Title that was posted to LinkedIn', max_length=500)),
                ('posted_content', models.TextField(blank=True, help_text='Full content that was posted to LinkedIn')),
                ('posted_url', models.URLField(blank=True, help_text='Blog post URL that was included in the LinkedIn post')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the posting attempt was first created')),
                ('posted_at', models.DateTimeField(blank=True, help_text='When the post was successfully posted to LinkedIn', null=True)),
                ('last_attempt_at', models.DateTimeField(blank=True, help_text='When the last posting attempt was made', null=True)),
                ('next_retry_at', models.DateTimeField(blank=True, help_text='When the next retry attempt should be made', null=True)),
                ('post', models.ForeignKey(help_text='The blog post that was posted to LinkedIn', on_delete=django.db.models.deletion.CASCADE, related_name='linkedin_posts', to='blog.post')),
            ],
            options={
                'verbose_name': 'LinkedIn Post',
                'verbose_name_plural': 'LinkedIn Posts',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['post', 'status'], name='blog_linked_post_id_bf7d8a_idx'), models.Index(fields=['status'], name='blog_linked_status_79dd14_idx'), models.Index(fields=['created_at'], name='blog_linked_created_f1bcca_idx'), models.Index(fields=['next_retry_at'], name='blog_linked_next_re_f6eb43_idx')],
                'unique_together': {('post',)},
            },
        ),
    ]
